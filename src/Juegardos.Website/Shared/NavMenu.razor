@inject NavigationManager _navigationManager

<div class="backdrop @(_showMegaMenu ? "show" : "")" @onclick="Close"></div>
<nav class="navbar">
    <div class="minimized-navbar">
        <i class="material-icons toggle-button" @onclick="() => _active = !_active">menu</i>
        <div class="brand-title logo" @onclick='() => _navigationManager.NavigateTo("")'><Logo /></div>
        @if (!_isInSearchPage)
        {
            <a href="buscar"><i class="material-icons search-button">search</i></a>
        }
        else
        {
            <span style="width:50px; height: 44px;"></span>
        }
    </div>
    <div class="navbar-links @(_active ? "active" : "")">
        <ul>
            <li>
                <a class="mega-box-toggle" @onclick="() => _showMegaMenu = !_showMegaMenu">Categorias<i class="material-icons">arrow_drop_down</i></a>
                <div class="mega-box @(_showMegaMenu ? "active" : "")">
                    <div class="content">
                        <div class="row">
                            <ul class="mega-links">
                                <li><a href="buscar/accion" @onclick='() => NavigateToAndCloseMegaMenu("buscar/accion")'>Acción</a></li>
                                <li><a href="buscar/aventura" @onclick='() => NavigateToAndCloseMegaMenu("buscar/aventura")'>Aventura</a></li>
                                <li><a href="buscar/belleza" @onclick='() => NavigateToAndCloseMegaMenu("buscar/belleza")'>Belleza</a></li>
                            </ul>
                        </div>
                        <div class="row">
                            <ul class="mega-links">
                                <li><a href="buscar/carreras" @onclick='() => NavigateToAndCloseMegaMenu("buscar/carreras")'>Carreras</a></li>
                                <li><a href="buscar/clasicos" @onclick='() => NavigateToAndCloseMegaMenu("buscar/clasicos")'>Clásicos</a></li>
                                <li><a href="buscar/click" @onclick='() => NavigateToAndCloseMegaMenu("buscar/click")'>Click</a></li>
                            </ul>
                        </div>
                        <div class="row">
                            <ul class="mega-links">
                                <li><a href="buscar/deportes" @onclick='() => NavigateToAndCloseMegaMenu("buscar/deportes")'>Deportes</a></li>
                                <li><a href="buscar/puzzle" @onclick='() => NavigateToAndCloseMegaMenu("buscar/puzzle")'>Puzzle</a></li>
                                <li><a href="buscar/tiros" @onclick='() => NavigateToAndCloseMegaMenu("buscar/tiros")'>Tiros</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
            @if (!_isInSearchPage)
            {
                <li class="hide-on-mobile"><InputSearch OnSearch="(string text) => SearchGames(text)" /></li>
            }
            <li class="hide-on-mobile" @onclick="() => _modalSignIn.Open()"><a href=""><i class="material-icons">account_circle</i></a></li>
            <li class="hide-on-desktop" @onclick="() => _modalSignIn.Open()"><a href="">Mi cuenta</a></li>
        </ul>
    </div>
</nav>

<Modal Title="Iniciá sesión" @ref="_modalSignIn">
    <EditForm Model="_signIn" OnValidSubmit="HandleSignIn">
        <DataAnnotationsValidator />
        <div>
            <label>Usuario o correo electrónico</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." @bind-Value="_signIn.UsernameOrEmail" />
            <ValidationMessage For="() => _signIn.UsernameOrEmail" />
        </div>
        <div>
            <label>Contraseña</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." type="password" @bind-Value="_signIn.Password" />
            <ValidationMessage For="() => _signIn.Password" />
        </div>
        <div class="links">
            <div>
                <a @onclick="SignInToSignUp">No recuerdo cómo ingresar</a>
                <a @onclick="SignInToResetPassword">¡Registrarme!</a>
            </div>
            <button class="simple-button">Ingresar</button>
        </div>
    </EditForm>
</Modal>

<Modal Title="Creá tu cuenta" @ref="_modalSignUp">
    <EditForm Model="_signUp" OnValidSubmit="HandleSignUp">
        <DataAnnotationsValidator />
        <div>
            <label>Nombre de usuario</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." @bind-Value="_signUp.Username" />
            <ValidationMessage For="() => _signUp.Username" />
        </div>
        <div>
            <label>Correo electrónico</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." @bind-Value="_signUp.Email" />
            <ValidationMessage For="() => _signUp.Email" />
        </div>
        <div>
            <label>Contraseña</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." type="password" @bind-Value="_signUp.Password" />
            <ValidationMessage For="() => _signUp.Password" />
        </div>
        <div class="links">
            <a @onclick="SignUpToSignIn">Ya tengo una cuenta</a>
            <button class="simple-button">Registrarme</button>
        </div>
    </EditForm>
</Modal>

<Modal Title="Recuperá tu cuenta" @ref="_modalResetPassword">
    <EditForm Model="_resetPassword" OnValidSubmit="HandleResetPassword">
        <DataAnnotationsValidator />
        <div>
            <label>Usuario o correo electrónico</label>
            <InputText class="primary-input" placeholder="Escribe aquí..." @bind-Value="_resetPassword.UsernameOrEmail" />
            <ValidationMessage For="() => _resetPassword.UsernameOrEmail" />
        </div>
        <div class="links">
            <a @onclick="ResetPasswordToSignIn">Recordé mi contraseña</a>
            <button class="simple-button">Recuperar</button>
        </div>
    </EditForm>
</Modal>

@code{

    private bool _active = false;
    private bool _showMegaMenu = false;
    private bool _isInSearchPage = false;
    private Modal _modalSignIn = new();
    private Modal _modalSignUp = new();
    private Modal _modalResetPassword = new();
    private SignIn _signIn = new();
    private SignUp _signUp = new();
    private ResetPassword _resetPassword = new();

    protected override void OnInitialized()
    {
        _navigationManager.LocationChanged += SetIsInSearchPage;
    }

    private void SetIsInSearchPage(object? sender, LocationChangedEventArgs args)
    {
        _isInSearchPage = args.Location.Contains("buscar");
        StateHasChanged();
    }

    private void SignInToSignUp()
    {
        _modalSignIn.Close();
        _modalSignUp.Open();
    }

    private void SignUpToSignIn()
    {
        _modalSignUp.Close();
        _modalSignIn.Open();
    }

    private void SignInToResetPassword()
    {
        _modalSignIn.Close();
        _modalResetPassword.Open();
    }

    private void ResetPasswordToSignIn()
    {
        _modalResetPassword.Close();
        _modalSignIn.Open();
    }

    private void HandleSignIn()
    {
        _modalSignIn.Close();
        _signIn = new();
        _navigationManager.NavigateTo("mi-cuenta");
    }

    private void HandleSignUp()
    {
        _modalSignUp.Close();
        _signUp = new();
        _navigationManager.NavigateTo("mi-cuenta");
    }

    private void HandleResetPassword()
    {
        _modalResetPassword.Close();
        _resetPassword = new();
    }

    public void Close()
    {
        _showMegaMenu = false;
        StateHasChanged();
    }

    public void NavigateToAndCloseMegaMenu(string url)
    {
        _navigationManager.NavigateTo(url);
        _showMegaMenu = false;
    }

    public void SearchGames(string text)
    {
        _navigationManager.NavigateTo($"buscar/{StringHelper.FormatToUrlName(text)}");
        StateHasChanged();
    }

}