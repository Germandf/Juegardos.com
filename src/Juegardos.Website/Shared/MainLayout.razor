@inherits LayoutComponentBase
@inject IAppState _appState
@inject NavigationManager _navigationManager

<div class="wrapper">
    <NavMenu />
    <div class="content">
        @Body
    </div>
    <Footer/>
</div>

<Modal Expanded="true" @ref="_gameModal">
    <ChildContent>
        <div class="game-modal">
            <div class="game-modal-video">
                <div class="video">
                    <video src="videos/dead-cells-trailer.mp4" autoplay loop muted style="width: 100%;"></video>
                </div>
                <i class="material-icons" @onclick="_gameModal.Close">close</i>
            </div>
            <div class="game-modal-play">
                <button @onclick="GoToGame" class="outstanding-button play-button bounce-animation"><i class="material-icons">play_arrow</i><span>Jugar</span></button>
            </div>
            <div class="game-modal-info">
                <h3>@_appState.GameToShow.Name</h3>
                <div class="game-modal-info-details">
                    <p>@_appState.GameToShow.Description</p>
                    <div>
                        <p>Género: @_appState.GameToShow.Category</p>
                        <p>Popularidad: @_appState.GameToShow.Likes</p>
                    </div>
                </div>
                @if (!_appState.RelatedGames.Any())
                {
                    <div class="spinner"></div>
                }
                else
                {
                    <CarouselMultiple Title="Juegos relacionados" Games="_appState.RelatedGames" />
                }
            </div>
        </div>
    </ChildContent>
</Modal>

@code {

    private Modal _gameModal = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _appState.GameModal = _gameModal;
            _appState.StateHasChangedInModal = new EventCallback(this, StateHasChanged);
        }
        
    }

    private void GoToGame()
    {
        _navigationManager.NavigateTo($"jugar/{StringHelper.FormatToUrlName(_appState.GameToShow.Name)}");
        _gameModal.Close();
    }

}