@inherits LayoutComponentBase
@inject IAppState _appState
@inject NavigationManager _navigationManager

<div class="wrapper">
    <NavMenu />
    <div class="content">
        @Body
    </div>
    <Footer/>
</div>

<Modal Expanded="true" @ref="_gameModal">
    <TitleContent>
        @_appState.GameToShow.Name
    </TitleContent>
    <ChildContent>
        <div class="game-modal">
            <iframe width="1920" height="1080" src="https://www.youtube.com/embed/zdVk4hHQTn0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            <div class="game-modal-play">
                <button @onclick="GoToGame" class="outstanding-button play-button"><i class="material-icons">play_arrow</i><span>Jugar</span></button>
            </div>
            <div class="game-modal-info">
                <p>@_appState.GameToShow.Description</p>
                <p>Género: @_appState.GameToShow.Category</p>
                <p>Popularidad: @_appState.GameToShow.Likes</p>
            </div>
            @if (!_appState.RelatedGames.Any())
            {
                <div class="spinner"></div>
            }
            else
            {
                <CarouselMultiple Title="Juegos relacionados" Games="_appState.RelatedGames" />
            }
        </div>
    </ChildContent>
</Modal>

@code {

    private Modal _gameModal = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _appState.GameModal = _gameModal;
            _appState.StateHasChangedInModal = new EventCallback(this, StateHasChanged);
        }
        
    }

    private void GoToGame()
    {
        _navigationManager.NavigateTo($"jugar/{StringHelper.FormatToUrlName(_appState.GameToShow.Name)}");
        _gameModal.Close();
    }

}