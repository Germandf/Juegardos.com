@page "/mi-cuenta"
@inject IUserService _userService
@inject IGameService _gameService

@if (_isLoading)
{
    <div class="spinner screen-centered"></div>
}
else
{
    if (_user is null)
    {
        <p>El usuario no existe</p>
    }
    else
    {
        <div class="my-account-main">
            <h3>Información personal</h3>
            <div class="my-account-info">
                <div class="user-pic">
                    <i class="material-icons">account_circle</i>
                </div>
                <div class="editable">
                    <p>@_user.Username</p>
                    <i class="material-icons" @onclick="_changeUsernameModal.Open">edit</i>
                </div>
                <div class="editable">
                    <p>@_user.Email</p>
                    <i class="material-icons" @onclick="_changeEmailModal.Open">edit</i>
                </div>
                <div class="my-account-pasive-info">
                    <div>
                        <h5>Tiempo jugado</h5>
                        <p>@_user.TimePlayed</p>
                    </div>
                    <div>
                        <h5>Miembro desde</h5>
                        <p>@_user.MemberSince</p>
                    </div>
                </div>
            </div>
            @if (_favouriteGames.Any())
            {
                <h3>Mis juegos favoritos</h3>
                <div class="games-grid">
                    @foreach (var game in _favouriteGames)
                    {
                        <GameCard Game="game" />
                    }
                </div>
                @if (_favouriteGames.Count >= 16)
                {
                    <Pagination PaginationParameters="_paginationParameters" />
                }
            }
        </div>
    }
}

<Modal Title="Cambiá tu apodo" @ref="_changeUsernameModal">
    <EditForm Model="_changeUserName" OnValidSubmit="HandleChangeUsername">
        <DataAnnotationsValidator />
        <div>
            <label>Nuevo nombre de usuario</label>
            <InputText class="primary-input" placeholder=@_user.Username @bind-Value="_changeUserName.NewUsername" autofocus/>
            <ValidationMessage For="() => _changeUserName.NewUsername" />
        </div>
        <div class="links">
            <button class="simple-button">Cambiar</button>
        </div>
    </EditForm>
</Modal>

<Modal Title="Cambiá tu correo" @ref="_changeEmailModal">
    <EditForm Model="_changeEmail" OnValidSubmit="HandleChangeEmail">
        <DataAnnotationsValidator />
        <div>
            <label>Nueva dirección de correo</label>
            <InputText class="primary-input" placeholder=@_user.Email @bind-Value="_changeEmail.NewEmail" />
            <ValidationMessage For="() => _changeEmail.NewEmail" />
        </div>
        <div class="links">
            <button class="simple-button">Cambiar</button>
        </div>
    </EditForm>
</Modal>

@code {

    private User? _user = null;
    private bool _isLoading = false;
    private List<Game> _favouriteGames = new();
    private PaginationParameters _paginationParameters = new() { TotalCount = 100 };
    private Modal _changeUsernameModal = new();
    private Modal _changeEmailModal = new();
    private ChangeUsername _changeUserName = new();
    private ChangeEmail _changeEmail = new();

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        var getUserTask = _userService.GetUser();
        var getFavouriteGamesTask = _gameService.GetFavouriteGamesFromUser();
        _user = await getUserTask;
        _favouriteGames = await getFavouriteGamesTask;
        _paginationParameters.TotalCount = _favouriteGames.Count;
        _favouriteGames = _favouriteGames.Take(16).ToList();
        _isLoading = false;
    }

    private void HandleChangeUsername()
    {
        _user.Username = _changeUserName.NewUsername;
        _changeUsernameModal.Close();
        _changeUserName = new();
    }

    private void HandleChangeEmail()
    {
        _user.Email = _changeEmail.NewEmail;
        _changeEmailModal.Close();
        _changeEmail = new();
    }
}
