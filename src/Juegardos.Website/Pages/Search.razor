@page "/buscar"
@page "/buscar/{nameOrCategory}"
@inject IGameService _gameService

<div class="search-container">
    <h3 class="search-title">Buscar</h3>
    <InputSearch InitialText="@StringHelper.FormatToNonUrlName(NameOrCategory ?? "")" OnSearch="SearchGames" />
    <div class="search-filters">
        <div class="search-filter">
            <label>Categoría</label>
            <select class="primary-input" @bind="@_categoryFilter">
                <option selected hidden disabled value="">Seleccioná...</option>
                <option value="@GameCategoryOptions.Action">Acción</option>
                <option value="@GameCategoryOptions.Adventure">Aventura</option>
                <option value="@GameCategoryOptions.Beauty">Belleza</option>
                <option value="@GameCategoryOptions.Races">Carreras</option>
                <option value="@GameCategoryOptions.Classics">Clásicos</option>
                <option value="@GameCategoryOptions.Click">Click</option>
                <option value="@GameCategoryOptions.Sports">Deporte</option>
                <option value="@GameCategoryOptions.Puzzle">Puzzle</option>
                <option value="@GameCategoryOptions.Shots">Tiros</option>
            </select>
        </div>
        <div class="search-filter">
            <label>Popularidad</label>
            <select class="primary-input" @bind="@_popularityFilter">
                <option selected hidden disabled value="">Seleccioná...</option>
                <option value="@GamePopularityOptions.MorePopulars">Más populares</option>
                <option value="@GamePopularityOptions.LessPopulars">Menos populares</option>
            </select>
        </div>
        <div class="search-filter">
            <label>Ordenar</label>
            <select class="primary-input" @bind="@_orderFilter">
                <option selected hidden disabled value="">Seleccioná...</option>
                <option value="@GameOrderOptions.Ascendant">Ascendente</option>
                <option value="@GameOrderOptions.Descendant">Descendente</option>
            </select>
        </div>
    </div>
</div>
@if (_isLoading)
{
    <div class="spinner screen-centered"></div>
}
else
{
    @if (!_games.Any())
    {
        <div class="inner">
            <div class="rich_text_image top_align">
                <img src="https://cncdn.dmti.cloud/84b1fb9087e026d6b939e42e0f75b1fccfb704ee/static/media/Richard-Nicole.6b025b78.png" alt="not found">
            </div>
            <div class="message">
                <h1>¡Ups! No encontramos resultados</h1>
                <h2>¡Probá buscando algo diferente!</h2>
            </div>
        </div>
    }
    else
    {
        <div class="search-games-container">
            @foreach (var game in _games)
            {
                <GameCard Game="game" />
            }
        </div>
        @if (_games.Count >= 16)
        {
            <Pagination PaginationParameters="_paginationParameters" />
        }
    }
}

@code {

    [Parameter]
    public string? NameOrCategory { get; set; }

    private PaginationParameters _paginationParameters = new() { TotalCount = 100 };
    private List<Game> _games = new();
    private bool _isLoading = false;
    private string _categoryFilter = "";
    private string _popularityFilter = "";
    private string _orderFilter = "";

    protected override async Task OnParametersSetAsync()
    {
        _isLoading = true;
        _games = await _gameService.SearchGames(StringHelper.FormatToNonUrlName(NameOrCategory ?? ""));
        _games = _games.Take(16).ToList();
        _isLoading = false;
    }

    private async Task SearchGames(string name)
    {
        NameOrCategory = name;
        _isLoading = true;
        var gameFilters = new GameFilters() { Category = _categoryFilter, Popularity = _popularityFilter, Order = _orderFilter };
        _games = await _gameService.SearchGames(StringHelper.FormatToNonUrlName(NameOrCategory ?? ""), gameFilters);
        _games = _games.Take(16).ToList();
        _isLoading = false;
    }

}
